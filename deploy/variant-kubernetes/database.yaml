---
apiVersion: v1
kind: Pod
metadata:
  name: postgresql
spec:
  restartPolicy: Never
  hostAliases:
#  - ip: "127.0.0.1"
#    hostnames:
#    - "bar.local"
  - ip: "172.17.0.7"
    hostnames:
    - "postgresql"
  containers:
  - name: cat-hosts
    image: busybox
    command:
    - cat
    args:
    - "/etc/hosts"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: mphr
  labels:
    app: postgresql
data:
  POSTGRES_DB: metaphotor
  POSTGRES_USER: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: mphr
type: Opaque
data:
  password: c3VwZXJfcGFzcw==
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgresql-pv-volume
  namespace: mphr
  labels:
    type: local
    app: postgresql
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgresql-pv-claim
  namespace: mphr
  labels:
    app: postgresql
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgresql
  namespace: mphr
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgresql-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
            - name: POSTGRES_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: metaphotor
      volumes:
        - name: metaphotor
          persistentVolumeClaim:
            claimName: postgresql-pv-claim

