---
apiVersion: v1
kind: Namespace
metadata:
  name: mphr
---
apiVersion: v1
kind: Pod
metadata:
  name: metaphotor
spec:
  restartPolicy: Never
  hostAliases:
  - ip: "127.0.0.1"
    hostnames:
    - "metaphotor.info"
  - ip: "172.17.0.7"
    hostnames:
    - "postgresql"
  containers:
  - name: cat-hosts
    image: busybox
    command:
    - cat
    args:
    - "/etc/hosts"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: metaphotor-src-pv-volume
  namespace: mphr
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/metaphotor/src
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: metaphotor-src-pv-claim
  namespace: mphr
  labels:
    app: metaphotor
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metaphotor
  namespace: mphr
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.8
        ports:
        - containerPort: 80
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run
        - name: nginx-main-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-uwsgi-conf
          mountPath: /etc/nginx/uwsgi_params
          subPath: uwsgi_params
        - name: metaphotor-src
          mountPath: "/tmp"

      - name: metaphotor
        image: nsavelyeva/metaphotor:latest
        command: ["uwsgi"]
        args: ["--ini", "/etc/uwsgi.ini"]
        envFrom:
          - configMapRef:
              name: postgres-config
        env:
          - name: POSTGRES_PORT_5432_TCP_ADDR
            value: postgresql
          - name: POSTGRES_PORT_5432_TCP_PORT
            value: '5432'
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: password
          - name: POSTGRES_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: password
        volumeMounts:
        - name: metaphotor-src
          mountPath: "/opt/metaphotor"
      volumes:
      - name: metaphotor-src
        persistentVolumeClaim:
          claimName: metaphotor-src-pv-claim
      - name: docker-sock
        hostPath:
          path: /var/run
      - name: nginx-main-conf
        configMap:
          name: nginx-main
      - name: nginx-uwsgi-conf
        configMap:
          name: nginx-uwsgi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: mphr
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31457
  selector:
    app: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-main
  namespace: mphr
data:
  nginx.conf: |
    worker_processes 1;
    events {
        worker_connections 1024;
    }
    http {
      sendfile on;
      client_max_body_size 1024M;
      keepalive_timeout 0;
      upstream app {
         server unix:/tmp/sock.sock;
      }
      server {
        listen 80;
        listen [::]:80;
        server_name metaphotor.info;
        location / {
          try_files $uri @web;
          proxy_set_header Host $host;
          proxy_pass       http://127.0.0.1:31457/;
        }
        location @web {
          include uwsgi_params;
            uwsgi_pass app;
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-uwsgi
  namespace: mphr
data:
  uwsgi_params: |
    uwsgi_param QUERY_STRING $query_string;
    uwsgi_param REQUEST_METHOD $request_method;
    uwsgi_param CONTENT_TYPE $content_type;
    uwsgi_param CONTENT_LENGTH $content_length;
    uwsgi_param REQUEST_URI $request_uri;
    uwsgi_param PATH_INFO $document_uri;
    uwsgi_param DOCUMENT_ROOT $document_root;
    uwsgi_param SERVER_PROTOCOL $server_protocol;
    uwsgi_param REMOTE_ADDR $remote_addr;
    uwsgi_param REMOTE_PORT $remote_port;
    uwsgi_param SERVER_ADDR $server_addr;
    uwsgi_param SERVER_PORT $server_port;
    uwsgi_param SERVER_NAME $server_name;


