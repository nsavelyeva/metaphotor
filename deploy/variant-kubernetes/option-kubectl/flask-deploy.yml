apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  namespace: metaphotor
  labels:
    name: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      initContainers:
      - name: allow-nginx
        image: busybox:latest
        command: ["chown"]
        args: ["-R", "101:101", "/opt/metaphotor/persist"]
        volumeMounts:
        - name: metaphotor-persist
          mountPath: /opt/metaphotor/persist
      containers:
      - name: flask
        image: nsavelyeva/metaphotor:latest
        command: ["uwsgi"]
        args: ["--ini", "/etc/uwsgi.ini", "--static-map", "/static=/opt/metaphotor/app/static"]
        env:
        - name: POSTGRES_DB
          value: metaphotor
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        volumeMounts:
          - name: uwsgi-sock
            mountPath: /tmp
          - name: metaphotor-persist
            mountPath: /opt/metaphotor/persist
          - name: nfs-media
            mountPath: /opt/metaphotor/app/media
          - name: nfs-watch
            mountPath: /opt/metaphotor/app/watch
      volumes:
        - name: uwsgi-sock
          persistentVolumeClaim:
            claimName: uwsgi-socket-claim
        - name: metaphotor-persist
          persistentVolumeClaim:
            claimName: metaphotor-persist-claim
        - name: nfs-media
          nfs:
            server: 192.168.1.17
            path: /media/nfs/media
        - name: nfs-watch
          nfs:
            server: 192.168.1.17
            path: /media/nfs/watch
      restartPolicy: Always
